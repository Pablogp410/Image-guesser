// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PictureGame.Infrastructure.Data;

#nullable disable

namespace RazorPagesMovie.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20221119083204_gamePage")]
    partial class gamePage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("PictureGame.Core.Domain.Game.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuessTries")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TheImageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("playerID")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TheImageId");

                    b.ToTable("TheGame");
                });

            modelBuilder.Entity("PictureGame.Core.Domain.Game.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PictureId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Picture");
                });

            modelBuilder.Entity("PictureGame.Core.Domain.Game.Piece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PictureId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PictureId");

                    b.ToTable("Piece");
                });

            modelBuilder.Entity("PictureGame.Core.Domain.Player.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("PictureGame.Core.Domain.User.User", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PictureGame.Core.Domain.Game.Game", b =>
                {
                    b.HasOne("PictureGame.Core.Domain.Game.Picture", "TheImage")
                        .WithMany()
                        .HasForeignKey("TheImageId");

                    b.OwnsOne("PictureGame.Core.Domain.Game.Oracle", "Oracle", b1 =>
                        {
                            b1.Property<int>("GameId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Id")
                                .HasColumnType("INTEGER");

                            b1.HasKey("GameId");

                            b1.ToTable("TheGame");

                            b1.WithOwner()
                                .HasForeignKey("GameId");
                        });

                    b.Navigation("Oracle")
                        .IsRequired();

                    b.Navigation("TheImage");
                });

            modelBuilder.Entity("PictureGame.Core.Domain.Game.Piece", b =>
                {
                    b.HasOne("PictureGame.Core.Domain.Game.Game", null)
                        .WithMany("CurrentImages")
                        .HasForeignKey("GameId");

                    b.HasOne("PictureGame.Core.Domain.Game.Picture", null)
                        .WithMany("Pieces")
                        .HasForeignKey("PictureId");
                });

            modelBuilder.Entity("PictureGame.Core.Domain.Game.Game", b =>
                {
                    b.Navigation("CurrentImages");
                });

            modelBuilder.Entity("PictureGame.Core.Domain.Game.Picture", b =>
                {
                    b.Navigation("Pieces");
                });
#pragma warning restore 612, 618
        }
    }
}
